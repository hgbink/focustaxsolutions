{"version":3,"sources":["webpack:///component---src-pages-features-consistency-jsx-67bc4613432333871d1c.js","webpack:///./src/pages/features/consistency.jsx"],"names":["webpackJsonp","156","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","call","_objectWithoutProperties","keys","target","i","indexOf","pageQuery","undefined","_extends","assign","arguments","length","source","_react","React","_react2","_gatsbyLink","_gatsbyLink2","_gatsbyImage","_gatsbyImage2","_Features","_utils","withI18n","_ref","i18n","props","createElement","Title","title","_","section","description","className","Trans","id","components","href","to","prefix","data-aos","data","createCaptable","alt","transactionError","availableShares","shareNumberChecking","captableBasic","FeatureLinks","page"],"mappings":"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","file":"component---src-pages-features-consistency-jsx-67bc4613432333871d1c.js","sourcesContent":["webpackJsonp([184569264027647],{\n\n/***/ 156:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar React = _interopRequireWildcard(_react);\n\t\n\tvar _react2 = __webpack_require__(4);\n\t\n\tvar _gatsbyLink = __webpack_require__(14);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _gatsbyImage = __webpack_require__(13);\n\t\n\tvar _gatsbyImage2 = _interopRequireDefault(_gatsbyImage);\n\t\n\tvar _Features = __webpack_require__(16);\n\t\n\tvar _utils = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\texports.default = (0, _react2.withI18n)()(function (_ref) {\n\t  var i18n = _ref.i18n,\n\t      props = _objectWithoutProperties(_ref, ['i18n']);\n\t\n\t  return React.createElement(\n\t    'div',\n\t    null,\n\t    React.createElement(_utils.Title, {\n\t      title: i18n._('Consistency'),\n\t      section: i18n._('Features'),\n\t      description: i18n._('Track the complete history of your shares. Integrated consistency checks will guarantee that your cap table is error-free.')\n\t    }),\n\t    React.createElement(\n\t      'header',\n\t      { className: 'header text-white bg-ledgy' },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'container text-center' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-12 col-lg-8 offset-lg-2' },\n\t            React.createElement(\n\t              'h1',\n\t              null,\n\t              React.createElement(_react2.Trans, {\n\t                id: 'Guaranteed error-free'\n\t              })\n\t            )\n\t          )\n\t        )\n\t      )\n\t    ),\n\t    React.createElement(\n\t      'main',\n\t      { className: 'main-content' },\n\t      React.createElement(\n\t        'section',\n\t        { className: 'section overflow-hidden' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'container text-left' },\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            React.createElement(\n\t              'header',\n\t              { className: 'section-header text-left' },\n\t              React.createElement(\n\t                'h2',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'Replace your Excel with Ledgy'\n\t                })\n\t              ),\n\t              React.createElement(\n\t                'p',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'Keep all the history of your company\\u2019s share register at a single place. No more shuffling around with different documents shared via email, Dropbox, Google Drive or Slack.<0/>Ledgy will be your single source of truth. And it\\u2019s a damn good one!<1/><2/>To get started enter all transactions from your share register into Ledgy. That\\u2019s an excellent opportunity to understand what has been going on in your cap table.<3/><4/>Need help? <5>Contact us</5>, and we will assist you to get started with Ledgy.',\n\t                  components: [React.createElement('br', null), React.createElement('br', null), React.createElement('br', null), React.createElement('br', null), React.createElement('br', null), React.createElement(_gatsbyLink2.default, { href: true, to: props.prefix + '/contact/' })]\n\t                })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row gap-y' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-md-10 mx-auto mb-7', 'data-aos': 'fade-up' },\n\t                React.createElement(_gatsbyImage2.default, _extends({}, props.data.createCaptable, { alt: i18n._('Create a cap table') }))\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'row align-items-center my-8' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-4' },\n\t              React.createElement(\n\t                'p',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'Oops, there was an error in your share register? Don\\u2019t worry; Ledgy will assist you in getting your cap table straight.<0/>Once finished, sit back and relax. Now you can be assured that your cap table is error-free!',\n\t                  components: [React.createElement('br', null)]\n\t                })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-8 ml-auto', 'data-aos': 'fade-left' },\n\t              React.createElement(_gatsbyImage2.default, _extends({}, props.data.transactionError, { alt: i18n._('Transaction error checking') }))\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'row align-items-center my-8' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-4 ml-auto' },\n\t              React.createElement(\n\t                'p',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'Did you notice the number in the center bottom? Any time you transfer shares from one shareholder to another, Ledgy will show you how many shares that particular shareholder has <0>available</0> at that given point in time.',\n\t                  components: [React.createElement('i', null)]\n\t                })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-8 order-md-first', 'data-aos': 'fade-right' },\n\t              React.createElement(_gatsbyImage2.default, _extends({}, props.data.availableShares, { alt: i18n._('Available shares for transfer') }))\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'row align-items-center my-8' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-4 ml-auto' },\n\t              React.createElement(\n\t                'p',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'By the way, if you decide to number your shares, we also got you covered. Ledgy will track who owns which shares for each transaction and assist you in entering valid share numbers.<0/>With Ledgy you can be sure that no single share number goes missing or is assigned twice.',\n\t                  components: [React.createElement('br', null)]\n\t                })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-8', 'data-aos': 'fade-left' },\n\t              React.createElement(_gatsbyImage2.default, _extends({}, props.data.shareNumberChecking, { alt: i18n._('Share number checking') }))\n\t            )\n\t          ),\n\t          React.createElement('hr', { className: 'my-8' }),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            React.createElement(\n\t              'header',\n\t              { className: 'section-header text-left' },\n\t              React.createElement(\n\t                'h2',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'Nice charts!'\n\t                })\n\t              ),\n\t              React.createElement(\n\t                'p',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'Finished? Go back to the <0>Cap Table</0> page and view the result. At any point in the history of your share register, Ledgy can draw you a helpful diagram that represents the current equity distribution of your company.',\n\t                  components: [React.createElement('i', null)]\n\t                })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row gap-y' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-md-10 mx-auto mb-7', 'data-aos': 'fade-up' },\n\t                React.createElement(_gatsbyImage2.default, _extends({}, props.data.captableBasic, { alt: i18n._('A basic cap table') }))\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(_Features.FeatureLinks, _extends({}, props, { i18n: i18n, page: 'consistency' }))\n\t        )\n\t      )\n\t    )\n\t  );\n\t});\n\t\n\t// eslint-disable-next-line no-undef\n\t\n\tvar pageQuery = exports.pageQuery = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-features-consistency-jsx-67bc4613432333871d1c.js","// @flow\n\nimport * as React from 'react';\nimport { withI18n, Trans } from '@lingui/react';\nimport Link from 'gatsby-link';\nimport Img from 'gatsby-image';\n\nimport { FeatureLinks } from '../../components/Features';\nimport { Title } from '../../layouts/utils';\n\n\nexport default withI18n()(({ i18n, ...props }: Props) => (\n  <div>\n    <Title\n      title={i18n.t`Consistency`}\n      section={i18n.t`Features`}\n      description={i18n.t`Track the complete history of your shares. Integrated consistency checks will guarantee that your cap table is error-free.`}\n    />\n\n    <header className=\"header text-white bg-ledgy\">\n      <div className=\"container text-center\">\n\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8 offset-lg-2\">\n            <h1><Trans>Guaranteed error-free</Trans></h1>\n          </div>\n        </div>\n\n      </div>\n    </header>\n    <main className=\"main-content\">\n\n\n      <section className=\"section overflow-hidden\">\n        <div className=\"container text-left\">\n\n          <div>\n            <header className=\"section-header text-left\">\n              <h2><Trans>Replace your Excel with Ledgy</Trans></h2>\n              <p>\n                <Trans>\n                  Keep all the history of your company’s share register at a single place.\n                  No more shuffling around with different documents shared via email, Dropbox,\n                  Google Drive or Slack.<br />\n                  Ledgy will be your single source of truth.\n                  And it’s a damn good one!\n                  <br /><br />\n                  To get started enter all transactions from your share\n                  register into Ledgy. That’s an excellent opportunity to understand\n                  what has been going on in your cap table.<br /><br />\n                  Need help? <Link href to={`${props.prefix}/contact/`}>Contact us</Link>, and\n                  we will assist you to get started with Ledgy.\n                </Trans>\n              </p>\n            </header>\n\n            <div className=\"row gap-y\">\n              <div className=\"col-md-10 mx-auto mb-7\" data-aos=\"fade-up\">\n                <Img {...props.data.createCaptable} alt={i18n.t`Create a cap table`} />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row align-items-center my-8\">\n            <div className=\"col-md-4\">\n              <p>\n                <Trans>\n                  Oops, there was an error in your share register?\n                  Don’t worry; Ledgy will assist you in getting your cap table straight.<br />\n                  Once finished, sit back and relax. Now you can be assured that\n                  your cap table is error-free!\n                </Trans>\n              </p>\n            </div>\n\n            <div className=\"col-md-8 ml-auto\" data-aos=\"fade-left\">\n              <Img {...props.data.transactionError} alt={i18n.t`Transaction error checking`} />\n            </div>\n          </div>\n\n          <div className=\"row align-items-center my-8\">\n            <div className=\"col-md-4 ml-auto\">\n              <p>\n                <Trans>\n                  Did you notice the number in the center bottom? Any time you transfer\n                  shares from one shareholder to another, Ledgy will show you\n                  how many shares that particular shareholder has <i>available</i> at\n                  that given point in time.\n                </Trans>\n              </p>\n            </div>\n\n            <div className=\"col-md-8 order-md-first\" data-aos=\"fade-right\">\n              <Img {...props.data.availableShares} alt={i18n.t`Available shares for transfer`} />\n            </div>\n          </div>\n\n          <div className=\"row align-items-center my-8\">\n            <div className=\"col-md-4 ml-auto\">\n              <p>\n                <Trans>\n                  By the way, if you decide to number your shares, we also got you covered.\n                  Ledgy will track who owns which shares for each transaction\n                  and assist you in entering valid share numbers.<br />\n                  With Ledgy you can be sure that no single share number goes\n                  missing or is assigned twice.\n                </Trans>\n              </p>\n            </div>\n\n            <div className=\"col-md-8\" data-aos=\"fade-left\">\n              <Img {...props.data.shareNumberChecking} alt={i18n.t`Share number checking`} />\n            </div>\n          </div>\n\n          <hr className=\"my-8\" />\n\n          <div>\n            <header className=\"section-header text-left\">\n              <h2><Trans>Nice charts!</Trans></h2>\n              <p>\n                <Trans>\n                  Finished? Go back to the <i>Cap Table</i> page\n                  and view the result.\n                  At any point in the history of your share register, Ledgy\n                  can draw you a helpful diagram that represents the current equity\n                  distribution of your company.\n                </Trans>\n              </p>\n            </header>\n\n            <div className=\"row gap-y\">\n              <div className=\"col-md-10 mx-auto mb-7\" data-aos=\"fade-up\">\n                <Img {...props.data.captableBasic} alt={i18n.t`A basic cap table`} />\n              </div>\n            </div>\n          </div>\n\n          <FeatureLinks {...props} i18n={i18n} page=\"consistency\" />\n\n        </div>\n      </section>\n\n\n    </main>\n  </div>\n));\n\n\n// eslint-disable-next-line no-undef\nexport const pageQuery = graphql`\n  query ConsistencyQuery {\n    ...FeaturesFragment\n\n    createCaptable: imageSharp(id: { regex: \"/create-captable.png/\" }) {\n      sizes(maxWidth: 800) { ...GatsbyImageSharpSizes }\n    }\n    transactionError: imageSharp(id: { regex: \"/transaction-error.png/\" }) {\n      sizes(maxWidth: 800) { ...GatsbyImageSharpSizes }\n    }\n    availableShares: imageSharp(id: { regex: \"/available-shares.png/\" }) {\n      sizes(maxWidth: 800) { ...GatsbyImageSharpSizes }\n    }\n    shareNumberChecking: imageSharp(id: { regex: \"/share-number-checking.png/\" }) {\n      sizes(maxWidth: 800) { ...GatsbyImageSharpSizes }\n    }\n    captableBasic: imageSharp(id: { regex: \"/captable-basic.png/\" }) {\n      sizes(maxWidth: 800) { ...GatsbyImageSharpSizes }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/features/consistency.jsx"],"sourceRoot":""}