{"version":3,"sources":["webpack:///component---src-pages-features-reporting-jsx-b4102062f8c0d498f6cf.js","webpack:///./src/pages/features/reporting.jsx"],"names":["webpackJsonp","159","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","call","_objectWithoutProperties","keys","target","i","indexOf","pageQuery","undefined","_extends","assign","arguments","length","source","_react","React","_react2","_gatsbyImage","_gatsbyImage2","_Features","_utils","withI18n","_ref","i18n","props","createElement","Title","title","_","section","description","className","Trans","id","components","data-aos","data","shareRegisterPdf","alt","sendHoldingConfirmation","holdingConfirmationPdf","documentManagement","FeatureLinks","page"],"mappings":"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","file":"component---src-pages-features-reporting-jsx-b4102062f8c0d498f6cf.js","sourcesContent":["webpackJsonp([84524025035526],{\n\n/***/ 159:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar React = _interopRequireWildcard(_react);\n\t\n\tvar _react2 = __webpack_require__(4);\n\t\n\tvar _gatsbyImage = __webpack_require__(13);\n\t\n\tvar _gatsbyImage2 = _interopRequireDefault(_gatsbyImage);\n\t\n\tvar _Features = __webpack_require__(16);\n\t\n\tvar _utils = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\texports.default = (0, _react2.withI18n)()(function (_ref) {\n\t  var i18n = _ref.i18n,\n\t      props = _objectWithoutProperties(_ref, ['i18n']);\n\t\n\t  return React.createElement(\n\t    'div',\n\t    null,\n\t    React.createElement(_utils.Title, {\n\t      title: i18n._('Documents & Reporting'),\n\t      section: i18n._('Features'),\n\t      description: i18n._('Save painful work inserting numbers into templates. Automated documents and reports at your fingertips.')\n\t    }),\n\t    React.createElement(\n\t      'header',\n\t      { className: 'header text-white bg-ledgy' },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'container text-center' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'col-12 col-lg-8 offset-lg-2' },\n\t            React.createElement(\n\t              'h1',\n\t              null,\n\t              React.createElement(_react2.Trans, {\n\t                id: 'Documents & Reporting'\n\t              })\n\t            )\n\t          )\n\t        )\n\t      )\n\t    ),\n\t    React.createElement(\n\t      'main',\n\t      { className: 'main-content' },\n\t      React.createElement(\n\t        'section',\n\t        { className: 'section overflow-hidden' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'container text-left' },\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            React.createElement(\n\t              'header',\n\t              { className: 'section-header text-left' },\n\t              React.createElement(\n\t                'h2',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'Make your cap table legally binding'\n\t                })\n\t              ),\n\t              React.createElement(\n\t                'p',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'To create a legally binding share register, it must contain a handwritten signature. With Ledgy you can download a beautiful snapshot of your company\\u2019s shares structure. Print and sign it to have a legally valid document.<0/><1/>It includes the current cap table, including the non-diluted and fully-diluted stake of each shareholder (if you have options or phantom stock), your convertibles and ESOPs, and finally the transaction history, which tracks every change ever made to your cap table since the incorporation.',\n\t                  components: [React.createElement('br', null), React.createElement('br', null)]\n\t                })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row gap-y' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-md-12 mx-auto mb-7', 'data-aos': 'fade-up' },\n\t                React.createElement(_gatsbyImage2.default, _extends({}, props.data.shareRegisterPdf, { alt: i18n._('PDF export of the share register') }))\n\t              )\n\t            )\n\t          ),\n\t          React.createElement('hr', { className: 'my-8' }),\n\t          React.createElement(\n\t            'header',\n\t            { className: 'section-header text-left' },\n\t            React.createElement(\n\t              'h2',\n\t              null,\n\t              React.createElement(_react2.Trans, {\n\t                id: 'Send holding confirmations with ease'\n\t              })\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { className: 'row align-items-center my-8' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-6 ml-auto' },\n\t              React.createElement(\n\t                'p',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'Remember that day last year during tax season when you had to send holding confirmations to each shareholder, filling out boring Word templates by hand?<0/><1/>We\\u2019ve got the solution for you. With a single click, Ledgy creates nicely formatted holding confirmations for all of your shareholders and send them directly via email.<2/><3/>Reduce hours of tedious work to just a few seconds. Hurray!',\n\t                  components: [React.createElement('br', null), React.createElement('br', null), React.createElement('br', null), React.createElement('br', null)]\n\t                })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-5', 'data-aos': 'fade-left' },\n\t              React.createElement(_gatsbyImage2.default, _extends({}, props.data.sendHoldingConfirmation, { alt: i18n._('Dialog for holding confirmation') }))\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            React.createElement(\n\t              'header',\n\t              { className: 'section-header text-left' },\n\t              React.createElement(\n\t                'p',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'The holding confirmation lists all assets that a shareholder owns, as well as their total value needed for the tax declaration. Employees will be able to see their stock ownership plans and how many of their total shares they already have vested.<0/>All documents are ready to be sent to the tax authority!',\n\t                  components: [React.createElement('br', null)]\n\t                })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row gap-y' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-md-8 mx-auto mb-7', 'data-aos': 'fade-right' },\n\t                React.createElement(_gatsbyImage2.default, _extends({}, props.data.holdingConfirmationPdf, { alt: i18n._('Holding confirmation') }))\n\t              )\n\t            )\n\t          ),\n\t          React.createElement('hr', { className: 'my-8' }),\n\t          React.createElement(\n\t            'div',\n\t            null,\n\t            React.createElement(\n\t              'header',\n\t              { className: 'section-header text-left' },\n\t              React.createElement(\n\t                'h2',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'Bring order to your documents'\n\t                })\n\t              ),\n\t              React.createElement(\n\t                'p',\n\t                null,\n\t                React.createElement(_react2.Trans, {\n\t                  id: 'Every transaction in your share register usually comes with a pile of additional documents, like contracts. Get rid of complicated folder structures and attach them directly to your transactions. Ledgy gives you an overview of all documents that you uploaded and their corresponding transactions. Also in your transaction history, you can select any transaction and see all connected documents at a glance.<0/><1/>You can also share your documents by sending a simple link to your shareholders. This eliminates confusion about different versions of documents, as it is often the case when sending documents via email.',\n\t                  components: [React.createElement('br', null), React.createElement('br', null)]\n\t                })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row gap-y' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-md-10 mx-auto mb-7', 'data-aos': 'fade-left' },\n\t                React.createElement(_gatsbyImage2.default, _extends({}, props.data.documentManagement, { alt: i18n._('Document management') }))\n\t              )\n\t            )\n\t          ),\n\t          React.createElement(_Features.FeatureLinks, _extends({}, props, { i18n: i18n, page: 'round-modeling' }))\n\t        )\n\t      )\n\t    )\n\t  );\n\t});\n\t\n\t// eslint-disable-next-line no-undef\n\t\n\tvar pageQuery = exports.pageQuery = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-features-reporting-jsx-b4102062f8c0d498f6cf.js","// @flow\r\n\r\nimport * as React from 'react';\r\nimport { withI18n, Trans } from '@lingui/react';\r\nimport Img from 'gatsby-image';\r\n\r\nimport { FeatureLinks } from '../../components/Features';\r\nimport { Title } from '../../layouts/utils';\r\n\r\n\r\nexport default withI18n()(({ i18n, ...props }: Props) => (\r\n  <div>\r\n    <Title\r\n      title={i18n.t`Documents & Reporting`}\r\n      section={i18n.t`Features`}\r\n      description={i18n.t`Save painful work inserting numbers into templates. Automated documents and reports at your fingertips.`}\r\n    />\r\n\r\n    <header className=\"header text-white bg-ledgy\">\r\n      <div className=\"container text-center\">\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-lg-8 offset-lg-2\">\r\n            <h1><Trans>Documents & Reporting</Trans></h1>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </header>\r\n    <main className=\"main-content\">\r\n\r\n\r\n      <section className=\"section overflow-hidden\">\r\n        <div className=\"container text-left\">\r\n\r\n          <div>\r\n            <header className=\"section-header text-left\">\r\n              <h2><Trans>Make your cap table legally binding</Trans></h2>\r\n              <p>\r\n                <Trans>\r\n                  To create a legally binding share register, it\r\n                  must contain a handwritten signature.\r\n                  With Ledgy you can download a beautiful snapshot\r\n                  of your company’s shares structure.\r\n                  Print and sign it to have a legally valid document.\r\n                  <br /><br />\r\n                  It includes the current cap table, including the non-diluted and\r\n                  fully-diluted stake of each shareholder (if you have options or phantom stock),\r\n                  your convertibles and ESOPs, and finally the transaction history,\r\n                  which tracks every change ever made to your cap table since the incorporation.\r\n                </Trans>\r\n              </p>\r\n            </header>\r\n\r\n            <div className=\"row gap-y\">\r\n              <div className=\"col-md-12 mx-auto mb-7\" data-aos=\"fade-up\">\r\n                <Img {...props.data.shareRegisterPdf} alt={i18n.t`PDF export of the share register`} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <hr className=\"my-8\" />\r\n\r\n\r\n          <header className=\"section-header text-left\">\r\n            <h2><Trans>Send holding confirmations with ease</Trans></h2>\r\n          </header>\r\n\r\n          <div className=\"row align-items-center my-8\">\r\n            <div className=\"col-md-6 ml-auto\">\r\n              <p>\r\n                <Trans>\r\n                  Remember that day last year during tax season when you had to send\r\n                  holding confirmations to each shareholder, filling out boring\r\n                  Word templates by hand?\r\n                  <br /><br />\r\n                  We’ve got the solution for you. With a single click, Ledgy creates\r\n                  nicely formatted holding confirmations for all of your shareholders\r\n                  and send them directly via email.\r\n                  <br /><br />\r\n                  Reduce hours of tedious work to just a few seconds. Hurray!\r\n                </Trans>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-md-5\" data-aos=\"fade-left\">\r\n              <Img {...props.data.sendHoldingConfirmation} alt={i18n.t`Dialog for holding confirmation`} />\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div>\r\n            <header className=\"section-header text-left\">\r\n              <p>\r\n                <Trans>\r\n                  The holding confirmation lists all assets that a shareholder owns,\r\n                  as well as their total value needed for the tax declaration.\r\n                  Employees will be able to see their stock ownership plans and\r\n                  how many of their total shares they already have vested.\r\n                  <br />\r\n                  All documents are ready to be sent to the tax authority!\r\n                </Trans>\r\n              </p>\r\n            </header>\r\n\r\n            <div className=\"row gap-y\">\r\n              <div className=\"col-md-8 mx-auto mb-7\" data-aos=\"fade-right\">\r\n                <Img {...props.data.holdingConfirmationPdf} alt={i18n.t`Holding confirmation`} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <hr className=\"my-8\" />\r\n\r\n\r\n          <div>\r\n            <header className=\"section-header text-left\">\r\n              <h2><Trans>Bring order to your documents</Trans></h2>\r\n              <p>\r\n                <Trans>\r\n                  Every transaction in your share register usually comes with a\r\n                  pile of additional documents, like contracts.\r\n                  Get rid of complicated folder structures and attach them\r\n                  directly to your transactions.\r\n                  Ledgy gives you an overview of all documents that you uploaded and\r\n                  their corresponding transactions.\r\n                  Also in your transaction history, you can select any transaction and see\r\n                  all connected documents at a glance.\r\n                  <br /><br />\r\n                  You can also share your documents by sending a simple\r\n                  link to your shareholders.\r\n                  This eliminates confusion about different\r\n                  versions of documents, as it is often the case when sending documents via email.\r\n                </Trans>\r\n              </p>\r\n            </header>\r\n\r\n            <div className=\"row gap-y\">\r\n              <div className=\"col-md-10 mx-auto mb-7\" data-aos=\"fade-left\">\r\n                <Img {...props.data.documentManagement} alt={i18n.t`Document management`} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <FeatureLinks {...props} i18n={i18n} page=\"round-modeling\" />\r\n\r\n        </div>\r\n      </section>\r\n\r\n\r\n    </main>\r\n  </div>\r\n));\r\n\r\n\r\n// eslint-disable-next-line no-undef\r\nexport const pageQuery = graphql`\r\n  query ReportingQuery {\r\n    ...FeaturesFragment\r\n\r\n    shareRegisterPdf: imageSharp(id: { regex: \"/share-register-pdf.png/\" }) {\r\n      sizes(maxWidth: 2400) { ...GatsbyImageSharpSizes }\r\n    }\r\n    sendHoldingConfirmation: imageSharp(id: { regex: \"/send-holding-confirmation.png/\" }) {\r\n      sizes(maxWidth: 800) { ...GatsbyImageSharpSizes }\r\n    }\r\n    holdingConfirmationPdf: imageSharp(id: { regex: \"/holding-confirmation-pdf.png/\" }) {\r\n      sizes(maxWidth: 2000) { ...GatsbyImageSharpSizes }\r\n    }\r\n    documentManagement: imageSharp(id: { regex: \"/document-management.png/\" }) {\r\n      sizes(maxWidth: 800) { ...GatsbyImageSharpSizes }\r\n    }\r\n  }\r\n`;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/features/reporting.jsx"],"sourceRoot":""}