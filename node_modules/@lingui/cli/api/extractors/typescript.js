"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _babelCore = require("babel-core");

var _babelPluginTransformTypescript = require("babel-plugin-transform-typescript");

var _babelPluginTransformTypescript2 = _interopRequireDefault(_babelPluginTransformTypescript);

var _babelPluginTransformJs = require("@lingui/babel-plugin-transform-js");

var _babelPluginTransformJs2 = _interopRequireDefault(_babelPluginTransformJs);

var _babelPluginTransformReact = require("@lingui/babel-plugin-transform-react");

var _babelPluginTransformReact2 = _interopRequireDefault(_babelPluginTransformReact);

var _babelPluginExtractMessages = require("@lingui/babel-plugin-extract-messages");

var _babelPluginExtractMessages2 = _interopRequireDefault(_babelPluginExtractMessages);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var babelRe = /(^.?|\.[^d]|[^.]d|[^.][^d])\.tsx?$/i;


var extractor = {
  match: function match(filename) {
    return babelRe.test(filename);
  },
  extract: function extract(filename, localeDir) {
    (0, _babelCore.transformFileSync)(filename, {
      plugins: [
      // Plugins run before presets, so we need to import transform-plugins
      // here until we have a better way to run extract-messages plugin
      // *after* all plugins/presets.
      // Transform plugins are idempotent, so they can run twice.
      _babelPluginTransformTypescript2.default, _babelPluginTransformJs2.default, _babelPluginTransformReact2.default, [_babelPluginExtractMessages2.default, { localeDir: localeDir }]]
    });
  }
};

exports.default = extractor;